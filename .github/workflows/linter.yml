name: Linter
on:
  pull_request:
  workflow_call:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run the scans on"
        default: "main"
        type: string

permissions:
  contents: read
env:
  LINTER_RULES_PATH: ".github/configs"

jobs:
  super-linter:
    name: "super-linter: Workflow initializing"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 30
    permissions:
      contents: read
      packages: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DISABLE_ERRORS: "true"
      BASH_SEVERITY: "warning"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - name: checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          ref: "${{ env.INPUT_BRANCH }}"

      - name: Lint
        uses: super-linter/super-linter/slim@e1cb86b6e8d119f789513668b4b30bf17fe1efe4 # v7.2.0 x-release-please-version
        env:
        VALIDATE_CPP: false
        VALIDATE_JSCPD: false
        VALIDATE_JSON: false
        VALIDATE_JSON_PRETTIER: false
        VALIDATE_MARKDOWN_PRETTIER: false
        VALIDATE_MARKDOWN: false
        VALIDATE_CHECKOV: false
        VALIDATE_BASH_EXEC: false 
        VALIDATE_CSS_PRETTIER: false
        VALIDATE_ENV: false
        VALIDATE_GIT_COMMITLINT: false
        VALIDATE_GIT_MERGE_CONFLICT_MARKERS: false
        VALIDATE_GITHUB_ACTIONS: false
        VALIDATE_GITLEAKS: false
        VALIDATE_NATURAL_LANGUAGE: false
        VALIDATE_PYTHON: false
        VALIDATE_PYTHON_BLACK: false
        VALIDATE_PYTHON_FLAKE8:	false
        VALIDATE_PYTHON_ISORT: false
        VALIDATE_PYTHON_MYPY: false
        VALIDATE_PYTHON_PYINK: false
        VALIDATE_PYTHON_PYLINT: false
        VALIDATE_KUBERNETES_KUBECONFORM: false
        VALIDATE_SHELL_SHFMT: false
        VALIDATE_YAML_PRETTIER: false
        VALIDATE_YAML: false
        VALIDATE_GO_MODULES: false
        VALIDATE_GO: false # linter does not use config files
        VALIDATE_CLANG_FORMAT: false # TODO:  clang still see the same errors after running formatter on code base
        LINTER_RULES_PATH: .github/configs
        PYTHON_RUFF_CONFIG_FILE: .ruff.toml
        DOCKERFILE_HADOLINT_FILE_NAME: .hadolint.yaml
        BASH_FILE_NAME: .shellcheckrc
        CLANG_FORMAT_FILE_NAME: .clang-format
