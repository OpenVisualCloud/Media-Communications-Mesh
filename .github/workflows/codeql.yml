name: scan-codeql-workflow

on:
  push:
    branches: [ "main", "dev" ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ "main", "dev" ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
  schedule:
    - cron: '0 18 * * 1-5'

env:
  BUILD_TYPE: Release
  BUILD_DIR: "${{ github.workspace }}/_build"
  PREFIX_DIR: "${{ github.workspace }}/_install"
  MTL_BUILD_DISABLE_PCAPNG: true
  DEBIAN_FRONTEND: noninteractive
  TRY_CACHE_REFRESH: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ${{ matrix.runner-os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        runner-os: [ 'ubuntu-22.04' ]
    permissions:
      actions: read
      security-events: write
    defaults:
      run:
        shell: bash
    steps:
    - name: 'Harden Runner'
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit

    - name: 'Checkout repository'
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: 'Install OS level dependencies'
      run: eval 'source scripts/setup_build_env.sh && install_package_dependencies'

    - name: 'Check local dependencies build cache'
      id: load-local-dependencies-cache
      uses: actions/cache/restore@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
      with:
        path: ${{ env.BUILD_DIR }}
        key: ${{ runner.os }}-${{ hashFiles('versions.env') }}-${{ hashFiles('scripts/setup*.sh') }}

    - name: 'Download, unpack and patch build dependencies'
      if: steps.load-local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && get_download_unpack_dependencies'

    - name: 'Clone and patch ffmpeg 6.1 and 7.0'
      if: steps.load-local-dependencies-cache.outputs.cache-hit != 'true'
      run: |
        ffmpeg-plugin/clone-and-patch-ffmpeg.sh "6.1"
        ffmpeg-plugin/clone-and-patch-ffmpeg.sh "7.0"

    - name: 'Build and Install xdp and libbpf'
      run: eval 'source scripts/setup_build_env.sh && lib_install_xdp_bpf_tools'

    - name: 'Build and Install libfabric'
      run: eval 'source scripts/setup_build_env.sh && lib_install_fabrics'

    - name: 'Build and Install the DPDK'
      run: eval 'source scripts/setup_build_env.sh && lib_install_dpdk'

    - name: 'Build and Install the MTL'
      run: eval 'source scripts/setup_build_env.sh && lib_install_mtl'

    - name: 'Build and Install JPEG XS'
      run: eval 'source scripts/setup_build_env.sh && lib_install_jpeg_xs'

    - name: 'Build and Install JPEG XS ffmpeg plugin'
      run: eval 'source scripts/setup_build_env.sh && lib_install_mtl_jpeg_xs_plugin'

    - name: 'Build gRPC and dependencies'
      run: eval 'source scripts/setup_build_env.sh && lib_install_grpc'

    - name: 'Save local dependencies build cache'
      if: env.TRY_CACHE_REFRESH == 'true' && steps.load-local-dependencies-cache.outputs.cache-hit != 'true'
      id: save-local-dependencies-cache
      uses: actions/cache/save@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
      with:
        path: ${{ env.BUILD_DIR }}
        key: ${{ runner.os }}-${{ hashFiles('versions.env') }}-${{ hashFiles('scripts/setup*.sh') }}

    - name: 'Initialize CodeQL'
      uses: github/codeql-action/init@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
      with:
        languages: 'c-cpp'
        config-file: ${{ github.workspace }}/.github/codeql/codeql-config.yml

    - name: 'Build MCM SDK and Media Proxy'
      run: ./build.sh

    - name: 'Perform CodeQL Analysis'
      uses: github/codeql-action/analyze@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
      with:
        category: "/language:c-cpp"
