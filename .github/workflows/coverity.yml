name: scan-coverity-baremetal

on:
  schedule:
    - cron: '0 18 * * *'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run scans on'
        default: 'main'
        type: string

env:
  BUILD_TYPE: Release
  BUILD_DIR: "${{ github.workspace }}/_build"
  PREFIX_DIR: "${{ github.workspace }}/_install"
  MTL_BUILD_DISABLE_PCAPNG: true
  DEBIAN_FRONTEND: noninteractive

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  coverity:
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 90
    steps:
    - name: 'Harden Runner'
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit

    - name: 'Checkout repository'
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ inputs.branch }}

    - name: 'Install OS level dependencies'
      run: eval 'source scripts/setup_build_env.sh && install_package_dependencies'

    - name: 'Check local dependencies build cache'
      id: load-local-dependencies-cache
      uses: actions/cache/restore@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
      with:
        path: ${{ env.BUILD_DIR }}
        key: ${{ runner.os }}-${{ hashFiles('versions.env') }}-${{ hashFiles('scripts/setup*.sh') }}

    - name: 'Download, unpack and patch build dependencies'
      if: steps.load-local-dependencies-cache.outputs.cache-hit != 'true'
      run: eval 'source scripts/setup_build_env.sh && get_download_unpack_dependencies'

    - name: 'Clone and patch ffmpeg 6.1 and 7.0'
      if: steps.load-local-dependencies-cache.outputs.cache-hit != 'true'
      run: |
        ffmpeg-plugin/clone-and-patch-ffmpeg.sh "6.1"
        ffmpeg-plugin/clone-and-patch-ffmpeg.sh "7.0"

    - name: 'Build and Install xdp and libbpf'
      run: eval 'source scripts/setup_build_env.sh && lib_install_xdp_bpf_tools'

    - name: 'Build and Install libfabric'
      run: eval 'source scripts/setup_build_env.sh && lib_install_fabrics'

    - name: 'Build and Install the DPDK'
      run: eval 'source scripts/setup_build_env.sh && lib_install_dpdk'

    - name: 'Build and Install the MTL'
      run: eval 'source scripts/setup_build_env.sh && lib_install_mtl'

    - name: 'Build and Install JPEG XS'
      run: eval 'source scripts/setup_build_env.sh && lib_install_jpeg_xs'

    - name: 'Build and Install JPEG XS ffmpeg plugin'
      run: eval 'source scripts/setup_build_env.sh && lib_install_mtl_jpeg_xs_plugin'

    - name: 'Build gRPC and dependencies'
      run: eval 'source scripts/setup_build_env.sh && lib_install_grpc'

    - name: 'Run coverity'
      uses: vapier/coverity-scan-action@2068473c7bdf8c2fb984a6a40ae76ee7facd7a85 # v1.8.0
      with:
        project: 'Media-Communications-Mesh'
        email: ${{ secrets.COVERITY_SCAN_EMAIL }}
        token: ${{ secrets.COVERITY_SCAN_TOKEN }}
        build_language: 'cxx'
        build_platform: 'linux64'
        command: |
            ${{ github.workspace }}/build.sh && \
            ${{ github.workspace }}/ffmpeg-plugin/configure-ffmpeg.sh && \
            ${{ github.workspace }}/ffmpeg-plugin/build-ffmpeg.sh

    - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: coverity-reports
        path: '${{ github.workspace }}/cov-int'
