# Source repository: https://github.com/actions/dependency-review-action

name: scan-lint-and-depend-review
on:
  pull_request:
  workflow_call:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run the scans on"
        default: "main"
        type: string
      all_codebase:
        description: "[true] Validate all codebase. [false] Validate changes/diff only"
        default: "false"
        type: string
      fix_codebase:
        description: "[true] Perform scan and issues fix. [false] Perform scan only."
        default: "false"
        type: string

permissions:
  contents: read
env:
  INPUT_BRANCH: "${{ inputs.branch || github.sha }}"
  LINTER_RULES_PATH: ".github/configs/super-linter"
  SAVE_SUPER_LINTER_SUMMARY: "true"
  ENABLE_GITHUB_ACTIONS_STEP_SUMMARY: "true"
  SUPER_LINTER_OUTPUT_DIRECTORY_NAME: "super-linter-output"
  SUPER_LINTER_SUMMARY_FILE_NAME: "super-linter-summary.md"
  VALIDATE_ALL_CODEBASE: "${{ inputs.all_codebase || 'false' }}"
  PERFORM_CODEBASE_FIX: "${{ inputs.fix_codebase || 'false' }}"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  dependency-review:
    name: "dependency-review: Workflow initializing"
    runs-on: "ubuntu-22.04"
    steps:
      - name: "dependency-review: harden runner"
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - name: "dependency-review: checkout repository"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: "${{ env.INPUT_BRANCH }}"

      - name: "dependency-review: perform dependency-review action"
        uses: actions/dependency-review-action@72eb03d02c7872a771aacd928f3123ac62ad6d3a # v4.3.3

  super-linter:
    name: "super-linter: Workflow initializing"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 30
    permissions:
      contents: write
      packages: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DISABLE_ERRORS: "false"
      BASH_SEVERITY: "warning"
    steps:
      - name: "super-linter: Harden Runner"
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - name: "super-linter: checkout repository [fetch-depth=0]"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          ref: "${{ env.INPUT_BRANCH }}"

      - name: "super-linter: perform super-linter scan workflow."
        uses: super-linter/super-linter/slim@e1cb86b6e8d119f789513668b4b30bf17fe1efe4 # v7.2.0 x-release-please-version
        env:
          FIX_GO: "${{ env.PERFORM_CODEBASE_FIX }}"
          FIX_GO_MODULES: "${{ env.PERFORM_CODEBASE_FIX }}"
          FIX_GROOVY: "${{ env.PERFORM_CODEBASE_FIX }}"
          FIX_JSON_PRETTIER: "${{ env.PERFORM_CODEBASE_FIX }}"
          FIX_JSONC_PRETTIER: "${{ env.PERFORM_CODEBASE_FIX }}"
          FIX_MARKDOWN_PRETTIER: "${{ env.PERFORM_CODEBASE_FIX }}"
          FIX_PROTOBUF: "${{ env.PERFORM_CODEBASE_FIX }}"
          FIX_PYTHON_BLACK: "${{ env.PERFORM_CODEBASE_FIX }}"
          FIX_YAML_PRETTIER: "${{ env.PERFORM_CODEBASE_FIX }}"
          VALIDATE_BASH_EXEC: true
          VALIDATE_BASH: true
          VALIDATE_GO: true
          VALIDATE_GO_MODULES: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_GROOVY: true
          VALIDATE_JSON_PRETTIER: true
          VALIDATE_JSONC_PRETTIER: true
          VALIDATE_MARKDOWN_PRETTIER: true
          VALIDATE_PROTOBUF: true
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_YAML_PRETTIER: true

      - name: "super-linter: clang_format lint/fix. No error approach."
        uses: super-linter/super-linter/slim@e1cb86b6e8d119f789513668b4b30bf17fe1efe4 # v7.2.0 x-release-please-version
        env:
          FIX_CLANG_FORMAT: "${{ env.PERFORM_CODEBASE_FIX }}"
          VALIDATE_CLANG_FORMAT: true
          DISABLE_ERRORS: true

      - name: "super-linter: cpp-lint. No error approach."
        uses: super-linter/super-linter/slim@e1cb86b6e8d119f789513668b4b30bf17fe1efe4 # v7.2.0 x-release-please-version
        env:
          VALIDATE_CPP: true
          DISABLE_ERRORS: true

      - name: "super-linter: Commit and push linting fixes"
        if: >
          ( github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' ) &&
          github.ref_name != github.event.repository.default_branch &&
          env.PERFORM_CODEBASE_FIX == 'true'
        uses: stefanzweifel/git-auto-commit-action@e348103e9026cc0eee72ae06630dbe30c8bf7a79 # v5.1.0
        with:
          branch: "${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}"
          commit_message: "super-linter: fix validation stage linting issues"
          commit_user_name: "sys-vsval"
          commit_user_email: "sys_vsval@intel.com"

      - name: "super-linter: upload linter results as an artifact."
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        if: env.SAVE_SUPER_LINTER_SUMMARY == 'true' || env.ENABLE_GITHUB_ACTIONS_STEP_SUMMARY == 'true'
        with:
          name: "super-linter-reports"
          path: "${{ github.workspace }}/${{ env.SUPER_LINTER_OUTPUT_DIRECTORY_NAME }}/${{ env.SUPER_LINTER_SUMMARY_FILE_NAME }}"
