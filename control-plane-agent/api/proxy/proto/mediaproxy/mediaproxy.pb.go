// SPDX-FileCopyrightText: Copyright (c) 2024 Intel Corporation
//
// SPDX-License-Identifier: BSD-3-Clause

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.27.2
// source: mediaproxy.proto

package mediaproxy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ReportCommandResult request
type ReportCommandResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId string `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"` // id assigned by Agent at registration
}

func (x *ReportCommandResultRequest) Reset() {
	*x = ReportCommandResultRequest{}
	mi := &file_mediaproxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportCommandResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCommandResultRequest) ProtoMessage() {}

func (x *ReportCommandResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCommandResultRequest.ProtoReflect.Descriptor instead.
func (*ReportCommandResultRequest) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{0}
}

func (x *ReportCommandResultRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

// RegisterMediaProxy request
type RegisterMediaProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SdkPort uint32 `protobuf:"varint,1,opt,name=sdk_port,json=sdkPort,proto3" json:"sdk_port,omitempty"` // SDK API port - something to identify Media Proxy
}

func (x *RegisterMediaProxyRequest) Reset() {
	*x = RegisterMediaProxyRequest{}
	mi := &file_mediaproxy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterMediaProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMediaProxyRequest) ProtoMessage() {}

func (x *RegisterMediaProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMediaProxyRequest.ProtoReflect.Descriptor instead.
func (*RegisterMediaProxyRequest) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterMediaProxyRequest) GetSdkPort() uint32 {
	if x != nil {
		return x.SdkPort
	}
	return 0
}

// RegisterMediaProxy reply
type RegisterMediaProxyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId string `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"` // id assigned by Agent at registration
}

func (x *RegisterMediaProxyReply) Reset() {
	*x = RegisterMediaProxyReply{}
	mi := &file_mediaproxy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterMediaProxyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMediaProxyReply) ProtoMessage() {}

func (x *RegisterMediaProxyReply) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMediaProxyReply.ProtoReflect.Descriptor instead.
func (*RegisterMediaProxyReply) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterMediaProxyReply) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

// UnregisterMediaProxy request
type UnregisterMediaProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId string `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"` // id assigned by Agent at registration
}

func (x *UnregisterMediaProxyRequest) Reset() {
	*x = UnregisterMediaProxyRequest{}
	mi := &file_mediaproxy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterMediaProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMediaProxyRequest) ProtoMessage() {}

func (x *UnregisterMediaProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMediaProxyRequest.ProtoReflect.Descriptor instead.
func (*UnregisterMediaProxyRequest) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{3}
}

func (x *UnregisterMediaProxyRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

// UnregisterMediaProxy reply
type UnregisterMediaProxyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterMediaProxyReply) Reset() {
	*x = UnregisterMediaProxyReply{}
	mi := &file_mediaproxy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterMediaProxyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMediaProxyReply) ProtoMessage() {}

func (x *UnregisterMediaProxyReply) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMediaProxyReply.ProtoReflect.Descriptor instead.
func (*UnregisterMediaProxyReply) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{4}
}

// RegisterConnection request
type RegisterConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId     string `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	Kind        uint32 `protobuf:"varint,2,opt,name=kind,proto3" json:"kind,omitempty"`
	ConnType    uint32 `protobuf:"varint,3,opt,name=conn_type,json=connType,proto3" json:"conn_type,omitempty"`
	PayloadType uint32 `protobuf:"varint,4,opt,name=payload_type,json=payloadType,proto3" json:"payload_type,omitempty"`
	BufferSize  uint64 `protobuf:"varint,5,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
}

func (x *RegisterConnectionRequest) Reset() {
	*x = RegisterConnectionRequest{}
	mi := &file_mediaproxy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterConnectionRequest) ProtoMessage() {}

func (x *RegisterConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterConnectionRequest.ProtoReflect.Descriptor instead.
func (*RegisterConnectionRequest) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterConnectionRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *RegisterConnectionRequest) GetKind() uint32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *RegisterConnectionRequest) GetConnType() uint32 {
	if x != nil {
		return x.ConnType
	}
	return 0
}

func (x *RegisterConnectionRequest) GetPayloadType() uint32 {
	if x != nil {
		return x.PayloadType
	}
	return 0
}

func (x *RegisterConnectionRequest) GetBufferSize() uint64 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

// RegisterConnection reply
type RegisterConnectionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId string `protobuf:"bytes,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"` // id assigned by Agent at registration
}

func (x *RegisterConnectionReply) Reset() {
	*x = RegisterConnectionReply{}
	mi := &file_mediaproxy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterConnectionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterConnectionReply) ProtoMessage() {}

func (x *RegisterConnectionReply) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterConnectionReply.ProtoReflect.Descriptor instead.
func (*RegisterConnectionReply) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterConnectionReply) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

// UnregisterConnection request
type UnregisterConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId string `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	ConnId  string `protobuf:"bytes,2,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"` // id assigned by Agent at registration
}

func (x *UnregisterConnectionRequest) Reset() {
	*x = UnregisterConnectionRequest{}
	mi := &file_mediaproxy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterConnectionRequest) ProtoMessage() {}

func (x *UnregisterConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterConnectionRequest.ProtoReflect.Descriptor instead.
func (*UnregisterConnectionRequest) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{7}
}

func (x *UnregisterConnectionRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

func (x *UnregisterConnectionRequest) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

// UnregisterConnection reply
type UnregisterConnectionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterConnectionReply) Reset() {
	*x = UnregisterConnectionReply{}
	mi := &file_mediaproxy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterConnectionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterConnectionReply) ProtoMessage() {}

func (x *UnregisterConnectionReply) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterConnectionReply.ProtoReflect.Descriptor instead.
func (*UnregisterConnectionReply) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{8}
}

// StartCommandQueue request
type StartCommandQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyId string `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"` // Media Proxy id
}

func (x *StartCommandQueueRequest) Reset() {
	*x = StartCommandQueueRequest{}
	mi := &file_mediaproxy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartCommandQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCommandQueueRequest) ProtoMessage() {}

func (x *StartCommandQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCommandQueueRequest.ProtoReflect.Descriptor instead.
func (*StartCommandQueueRequest) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{9}
}

func (x *StartCommandQueueRequest) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

// Command message from Agent to Media Proxy
type CommandMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opcode string `protobuf:"bytes,1,opt,name=opcode,proto3" json:"opcode,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CommandMessage) Reset() {
	*x = CommandMessage{}
	mi := &file_mediaproxy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandMessage) ProtoMessage() {}

func (x *CommandMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mediaproxy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandMessage.ProtoReflect.Descriptor instead.
func (*CommandMessage) Descriptor() ([]byte, []int) {
	return file_mediaproxy_proto_rawDescGZIP(), []int{10}
}

func (x *CommandMessage) GetOpcode() string {
	if x != nil {
		return x.Opcode
	}
	return ""
}

func (x *CommandMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_mediaproxy_proto protoreflect.FileDescriptor

var file_mediaproxy_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x22, 0x37,
	0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x64, 0x6b, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x64, 0x6b, 0x50, 0x6f, 0x72, 0x74, 0x22,
	0x34, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1b, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x22,
	0x1b, 0x0a, 0x19, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xab, 0x01, 0x0a,
	0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x32, 0x0a, 0x17, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x22, 0x51,
	0x0a, 0x1b, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49,
	0x64, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x35,
	0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32,
	0x83, 0x04, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x12, 0x62,
	0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x68, 0x0a, 0x14, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x12,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x14, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x11, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x24, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mediaproxy_proto_rawDescOnce sync.Once
	file_mediaproxy_proto_rawDescData = file_mediaproxy_proto_rawDesc
)

func file_mediaproxy_proto_rawDescGZIP() []byte {
	file_mediaproxy_proto_rawDescOnce.Do(func() {
		file_mediaproxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_mediaproxy_proto_rawDescData)
	})
	return file_mediaproxy_proto_rawDescData
}

var file_mediaproxy_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_mediaproxy_proto_goTypes = []any{
	(*ReportCommandResultRequest)(nil),  // 0: mediaproxy.ReportCommandResultRequest
	(*RegisterMediaProxyRequest)(nil),   // 1: mediaproxy.RegisterMediaProxyRequest
	(*RegisterMediaProxyReply)(nil),     // 2: mediaproxy.RegisterMediaProxyReply
	(*UnregisterMediaProxyRequest)(nil), // 3: mediaproxy.UnregisterMediaProxyRequest
	(*UnregisterMediaProxyReply)(nil),   // 4: mediaproxy.UnregisterMediaProxyReply
	(*RegisterConnectionRequest)(nil),   // 5: mediaproxy.RegisterConnectionRequest
	(*RegisterConnectionReply)(nil),     // 6: mediaproxy.RegisterConnectionReply
	(*UnregisterConnectionRequest)(nil), // 7: mediaproxy.UnregisterConnectionRequest
	(*UnregisterConnectionReply)(nil),   // 8: mediaproxy.UnregisterConnectionReply
	(*StartCommandQueueRequest)(nil),    // 9: mediaproxy.StartCommandQueueRequest
	(*CommandMessage)(nil),              // 10: mediaproxy.CommandMessage
}
var file_mediaproxy_proto_depIdxs = []int32{
	1,  // 0: mediaproxy.ControlAPI.RegisterMediaProxy:input_type -> mediaproxy.RegisterMediaProxyRequest
	3,  // 1: mediaproxy.ControlAPI.UnregisterMediaProxy:input_type -> mediaproxy.UnregisterMediaProxyRequest
	5,  // 2: mediaproxy.ControlAPI.RegisterConnection:input_type -> mediaproxy.RegisterConnectionRequest
	7,  // 3: mediaproxy.ControlAPI.UnregisterConnection:input_type -> mediaproxy.UnregisterConnectionRequest
	9,  // 4: mediaproxy.ControlAPI.StartCommandQueue:input_type -> mediaproxy.StartCommandQueueRequest
	2,  // 5: mediaproxy.ControlAPI.RegisterMediaProxy:output_type -> mediaproxy.RegisterMediaProxyReply
	4,  // 6: mediaproxy.ControlAPI.UnregisterMediaProxy:output_type -> mediaproxy.UnregisterMediaProxyReply
	6,  // 7: mediaproxy.ControlAPI.RegisterConnection:output_type -> mediaproxy.RegisterConnectionReply
	8,  // 8: mediaproxy.ControlAPI.UnregisterConnection:output_type -> mediaproxy.UnregisterConnectionReply
	10, // 9: mediaproxy.ControlAPI.StartCommandQueue:output_type -> mediaproxy.CommandMessage
	5,  // [5:10] is the sub-list for method output_type
	0,  // [0:5] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_mediaproxy_proto_init() }
func file_mediaproxy_proto_init() {
	if File_mediaproxy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mediaproxy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mediaproxy_proto_goTypes,
		DependencyIndexes: file_mediaproxy_proto_depIdxs,
		MessageInfos:      file_mediaproxy_proto_msgTypes,
	}.Build()
	File_mediaproxy_proto = out.File
	file_mediaproxy_proto_rawDesc = nil
	file_mediaproxy_proto_goTypes = nil
	file_mediaproxy_proto_depIdxs = nil
}
